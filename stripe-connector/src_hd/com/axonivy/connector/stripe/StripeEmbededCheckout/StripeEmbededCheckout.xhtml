<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:ic="http://ivyteam.ch/jsf/component"
	xmlns:p="http://primefaces.org/ui"
	xmlns:pe="http://primefaces.org/ui/extensions"
	xmlns:cc="http://xmlns.jcp.org/jsf/composite"
	xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">


<cc:interface componentType="IvyComponent">
	<cc:attribute name="priceId" required="true" />
	<cc:attribute name="quantity" required="true" />
</cc:interface>

<cc:implementation>
	<c:set var="priceId" value="#{cc.attrs.priceId}" />
	<c:set var="quantity" value="#{cc.attrs.quantity}" />

	<div id="checkout">
		<!-- Checkout will insert the payment form here -->
	</div>
	<script src="https://js.stripe.com/v3/"></script>
	<script type="text/javascript">
		function startCheckout() {
			const publishableKey = "#{ivy.var.get("stripe-connector.auth.publishableKey")}";
			const url = "#{ivy.request.application.contextPath}" + "/api/stripe/create-checkout-session/" + "#{priceId}" + "/" + "#{quantity}";
		    fetch(url, {
		        method: 'POST',
		        headers: { 'Content-Type': 'application/json' , 'X-Requested-By': 'ivy'}
		    })
		    .then(response => response.json())
		    .then(data => {
		    	if(data.statusCode == 500) {
		    		alert(data.errorMessage);
		    		return;
		    	}
		    	
		    	if(!data.clientSecret) {
		    		alert('There is no client secret to create checkout session. Please check!');
		    		return;
		    	}
		    	
		    	const stripe = Stripe(publishableKey);
		        stripe.initEmbeddedCheckout({
		        	fetchClientSecret: () => Promise.resolve(data.clientSecret),
					onComplete: () => { alert('Payment completed successfully! Please refresh the page'); }
					})
			        .then(checkout => {
			            checkout.mount('#checkout');
			        })
			        .catch(error => {
			            alert('Failed to initialize checkout due to ' + error);
			        })
		    })
		    .catch(error => {
		        alert('Failed to create checkout session ' + error);
		    });
		}
	</script>
</cc:implementation>

</html>
